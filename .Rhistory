geom_histogram(binwidth = 0.1, fill = "darkgrey", color = "black", alpha = 0.7) +
labs(title = "",
x = "GR",
y = "Frequency")+
theme_bw()
og_hist <- ggplot(gr_total, aes(x = winter_wind)) +
geom_histogram(binwidth = 0.05, fill = "darkgrey", color = "black", alpha = 0.7) +
labs(title = "Individual season",
x = "winter_wind",
y = "Frequency")+
theme_bw()
all_hist <- ggplot(gr_total, aes(x = winter_wind_all)) +
geom_histogram(binwidth = 0.05, fill = "darkgrey", color = "black", alpha = 0.7) +
labs(title = "All agrregate",
x = "winter_wind_all",
y = "Frequency")+
theme_bw()
month3_hist <- ggplot(gr_total, aes(x = winter_wind_3month)) +
geom_histogram(binwidth = 0.05, fill = "darkgrey", color = "black", alpha = 0.7) +
labs(title = "3 month agrregate",
x = "winter_wind",
y = "Frequency")+
theme_bw()
snow_hist <- ggplot(gr_total, aes(x = winter_wind_snow)) +
geom_histogram(binwidth = 0.05, fill = "darkgrey", color = "black", alpha = 0.7) +
labs(title = "Snow day agrregate",
x = "winter_wind",
y = "Frequency")+
theme_bw()
gridExtra::grid.arrange(og_hist, all_hist, month3_hist, snow_hist, ncol = 2)
#### filer out useless colums
colnames(gr_total)
gr_total$Parapet <- ifelse(gr_total$Parapet > 0, 1, 0)
gr_total_seleted <- gr_total |> select(sqrtgr, logground,
wind_avg, temp_avg, Roof_Type, Slope,
roofflat, Size, Exposure, Heated, Insulated,
Parapet, winter_wind, winter_wind_all,
winter_wind_3month, winter_wind_snow,
above_freeze, above_freeze_all)
colnames(gr_total_seleted)
ggpairs(gr_total_seleted[c(3,5, 15:16)]) + theme_bw()
ggpairs(gr_total_seleted[c(3,5, 15:16)]) + theme_bw() +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank())
ggpairs(gr_total_seleted[c(3, 6, 20)]) + theme_bw() +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank())
ggpairs(gr_total_seleted[c(3, 8, 10)]) + theme_bw() +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank())
# version 2 of data
gr_total <- read.csv("data-raw//updated_data.csv")
cor(gr_total$roofflat, gr_total$Size)
# version 2 of data
gr_total <- read.csv("data-raw//updated_data.csv")
## adding above or below 15 slope
gr_total$slope15 <- ifelse(gr_total$Slope > 15, 1, 0)
gr_total <- gr_total[gr_total$gr <= 2,]
model1 <- lm(sqrtgr ~ logground, gr_total)
## obtaining resids from original model
gr_total$resid <- residuals(model1)
resid_data <- gr_total |> select(wind_avg, temp_avg, Slope,
roofflat, Size, Exposure, Heated, Insulated,
Parapet, winter_wind_all, above_freeze_all,
slope15, resid)
resid_no_na <- na.omit(resid_data)
## Setting up
resid_all <- lm(resid ~ ., resid_no_na)
resid_int <- lm(resid ~ 1, resid_no_na)
## Running forward and backward regression
resid_forward <- step(resid_int, direction='both', scope=formula(resid_all),
trace=0)
resid_backward <- step(resid_all, direction='both', scope=formula(resid_all),
trace=0)
resid_forward
resid_backward
## Running Lasso regression here
y <- resid_no_na$resid
x <- data.matrix(resid_no_na[, 1:12])
cv_model <- cv.glmnet(x, y, alpha = 1)
best_lambda <- cv_model$lambda.min
best_lambda
best_model <- glmnet(x, y, alpha = 1, lambda = best_lambda)
coef(best_model)
## subset for vars in step regression
gr_vars <- resid_no_na |> select(wind_avg, temp_avg,
roofflat, Size, Exposure, Insulated,
Parapet, winter_wind_all,
resid)
resid_vars <- na.omit(gr_vars)
ggpairs(gr_vars)
## look at tree to see interactions
tree <- rpart(formula = resid ~ ., data = resid_vars)
prp(tree)
pruned_tree <- prune(tree, cp = 0.04)
prp(pruned_tree)
## Running model based on selector methods
model_new <- lm(sqrtgr ~ logground + wind_avg + temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*wind_avg,
data = gr_total)
summary(model_new)
og_mod <- lm(sqrtgr ~ logground, data = gr_total)
summary(og_mod)
gr_total$logsize <- log(gr_total$Size)
ggpairs(gr_total |> select(sqrtgr, logground, wind_avg, temp_avg,
logsize)) + theme_bw() +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank())
plot(model_new)
ggplot(model_new, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(x = "Fitted Values", y= "Residuals") +
theme_bw()
shapiro.test(model_new$residuals)
## Trying with winter_wind_all
mod2 <- lm(sqrtgr ~ logground + winter_wind_all + temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*winter_wind_all,
data = gr_total)
summary(mod2)
ggpairs(gr_total |> select(sqrtgr, logground, winter_wind_all, temp_avg,
Size))
par(mfrow = c(1,3))
plot(gr_total$sqrtgr, gr_total$winter_wind_all, xlab= "sqrtgr", ylab = "W2",
main = "W2 and sqrt GR plot")
qqnorm(resid(mod2))
qqline(mod2$residuals)
plot(mod2$fitted.values, mod2$residuals, xlab = "Fitted values",
ylab = "Residuals", main = "W2 redsidual plot")
abline(0,0)
## Comaring metrics
AIC(model_new)
AIC(mod2)
AIC(og_mod)
BIC(model_new)
BIC(mod2)
BIC(og_mod)
ggplot(model_new, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(x = "Fitted Values", y= "Residuals") +
theme_bw()
# version 2 of data
gr_total <- read.csv("data-raw//updated_data.csv")
## adding above or below 15 slope
gr_total$slope15 <- ifelse(gr_total$Slope > 15, 1, 0)
gr_total <- gr_total[gr_total$gr <= 2,]
model1 <- lm(sqrtgr ~ logground, gr_total)
## obtaining resids from original model
gr_total$resid <- residuals(model1)
gr_total <- read.csv("data-raw//updated_data.csv")
gr_total <- gr_total[gr_total$gr <= 2,]
set.seed(1234)
seeds <- sample(1:10000, 25)
results_list_avg <- list()
for(i in 1:25){
set.seed(seeds[i])
results_list_avg[[i]] <- acc_test(data = gr_total, formula2 =
"sqrtgr ~ logground + wind_avg + temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*wind_avg",
rf_formula = gr ~ ground_max +
wind_avg + temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet)
}
for(i in 2:25){
avg_sum <- avg_sum + results_list_avg[[i]]
}
avg_avg <- avg_sum/25
## taking avg for avg wind speeds
avg_sum <- results_list_avg[[1]]
for(i in 2:25){
avg_sum <- avg_sum + results_list_avg[[i]]
}
avg_avg <- avg_sum/25
avg_avg
t(avg_avg)
# version 2 of data
gr_total <- read.csv("data-raw//updated_data.csv")
## adding above or below 15 slope
gr_total$slope15 <- ifelse(gr_total$Slope > 15, 1, 0)
gr_total <- gr_total[gr_total$gr <= 2,]
model1 <- lm(sqrtgr ~ logground, gr_total)
## obtaining resids from original model
gr_total$resid <- residuals(model1)
resid_data <- gr_total |> select(wind_avg, temp_avg, Slope,
roofflat, Size, Exposure, Heated, Insulated,
Parapet, winter_wind_all, above_freeze_all,
slope15, resid)
resid_no_na <- na.omit(resid_data)
## Setting up
resid_all <- lm(resid ~ ., resid_no_na)
resid_int <- lm(resid ~ 1, resid_no_na)
## Running forward and backward regression
resid_forward <- step(resid_int, direction='both', scope=formula(resid_all),
trace=0)
resid_backward <- step(resid_all, direction='both', scope=formula(resid_all),
trace=0)
resid_forward
resid_backward
## Running Lasso regression here
y <- resid_no_na$resid
x <- data.matrix(resid_no_na[, 1:12])
cv_model <- cv.glmnet(x, y, alpha = 1)
best_lambda <- cv_model$lambda.min
best_lambda
best_model <- glmnet(x, y, alpha = 1, lambda = best_lambda)
coef(best_model)
## subset for vars in step regression
gr_vars <- resid_no_na |> select(wind_avg, temp_avg,
roofflat, Size, Exposure, Insulated,
Parapet, winter_wind_all,
resid)
resid_vars <- na.omit(gr_vars)
ggpairs(gr_vars)
## look at tree to see interactions
tree <- rpart(formula = resid ~ ., data = resid_vars)
prp(tree)
pruned_tree <- prune(tree, cp = 0.04)
prp(pruned_tree)
## Running model based on selector methods
model_new <- lm(sqrtgr ~ logground + wind_avg + temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*wind_avg,
data = gr_total)
summary(model_new)
og_mod <- lm(sqrtgr ~ logground, data = gr_total)
summary(og_mod)
gr_total$logsize <- log(gr_total$Size)
shapiro.test(model_new$residuals)
## Trying with winter_wind_all
mod2 <- lm(sqrtgr ~ logground + winter_wind_all + temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*winter_wind_all,
data = gr_total)
summary(mod2)
summary(model_new)
summary(mod2)
colnames(gr_total)
nrow(gr_total)
ERA_w2 <- lm(sqrtgr ~ logground + est_wind_avg + est_temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*wind_avg,
data = gr_total)
summary(ERA_w2)
ERA_avg <- lm(sqrtgr ~ logground + est_wind_avg + est_temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*wind_avg,
data = gr_total)
summary(ERA_avg)
ERA_w2 <- lm(sqrtgr ~ logground + est_wind + est_temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*wind_avg,
data = gr_total)
summary(ERA_w2)
##### ERA5 data results
results_list_era5_a <- list()
for(i in 1:25){
set.seed(seeds[i])
results_list_era5_a[[i]] <- acc_test(data = gr_total, formula2 =
"sqrtgr ~ logground + est_wind_avg +
est_temp_avg + roofflat + Size +
Exposure +  Insulated +
Parapet + roofflat*Exposure +
roofflat*wind_avg",
rf_formula = gr ~ ground_max +
est_wind_avg +
est_temp_avg +
roofflat + Size + Exposure + Insulated +
Parapet)
}
## taking results with era5_a
era5_a_sum <- results_list_era5_a[[1]]
for(i in 2:25){
era5_a_sum <- era5_a_sum + results_list_era5_a[[i]]
}
era5_a_avg <- era5_a_sum/25
era5_a_avg
t(era5_a_avg)
##### w2
results_list_era5_w2 <- list()
for(i in 1:25){
set.seed(seeds[i])
results_list_era5_w2[[i]] <- acc_test(data = gr_total, formula2 =
"sqrtgr ~ logground + est_wind +
est_temp_avg + roofflat + Size +
Exposure +  Insulated +
Parapet + roofflat*Exposure +
roofflat*wind_avg",
rf_formula = gr ~ ground_max +
est_wind +
est_temp_avg +
roofflat + Size + Exposure + Insulated +
Parapet)
}
## taking results with era5_w2
era5_w2_sum <- results_list_era5_w2[[1]]
for(i in 2:25){
era5_w2_sum <- era5_w2_sum + results_list_era5_w2[[i]]
}
era5_w2_avg <- era5_w2_sum/25
era5_w2_avg
t(era5_w2_avg)
t(era5_a_avg)
summary(og_mod)
t(era5_a_avg)
summary(ERA_avg)
t(era5_w2_avg)
t(era5_a_avg)
summary(ERA_w2)
summary(ERA_avg)
summary(model_new)
ERA_avg <- lm(sqrtgr ~ logground + est_wind_avg + est_temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*est_wind_avg,
data = gr_total)
summary(ERA_avg)
ERA_w2 <- lm(sqrtgr ~ logground + est_wind + est_temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure + roofflat*est_wind,
data = gr_total)
summary(ERA_w2)
##### ERA5 data results
results_list_era5_a <- list()
for(i in 1:25){
set.seed(seeds[i])
results_list_era5_a[[i]] <- acc_test(data = gr_total, formula2 =
"sqrtgr ~ logground + est_wind_avg +
est_temp_avg + roofflat + Size +
Exposure +  Insulated +
Parapet + roofflat*Exposure +
roofflat*est_wind_avg",
rf_formula = gr ~ ground_max +
est_wind_avg +
est_temp_avg +
roofflat + Size + Exposure + Insulated +
Parapet)
}
## taking results with era5_a
era5_a_sum <- results_list_era5_a[[1]]
for(i in 2:25){
era5_a_sum <- era5_a_sum + results_list_era5_a[[i]]
}
era5_a_avg <- era5_a_sum/25
era5_a_avg
t(era5_a_avg)
##### w2
results_list_era5_w2 <- list()
for(i in 1:25){
set.seed(seeds[i])
results_list_era5_w2[[i]] <- acc_test(data = gr_total, formula2 =
"sqrtgr ~ logground + est_wind +
est_temp_avg + roofflat + Size +
Exposure +  Insulated +
Parapet + roofflat*Exposure +
roofflat*est_wind",
rf_formula = gr ~ ground_max +
est_wind +
est_temp_avg +
roofflat + Size + Exposure + Insulated +
Parapet)
}
## taking results with era5_w2
era5_w2_sum <- results_list_era5_w2[[1]]
for(i in 2:25){
era5_w2_sum <- era5_w2_sum + results_list_era5_w2[[i]]
}
era5_w2_avg <- era5_w2_sum/25
era5_w2_avg
t(era5_w2_avg)
summary(ERA_avg)
summary(ERA_w2)
t(era5_a_avg)
summary(ERA_avg)
summary(ERA_w2)
plot(gr_total$temp_avg,gr_total$est_temp_avg)
par(mfrow = c(1,1))
plot(gr_total$temp_avg, gr_total$wind_avg)
plot(gr_total$temp_avg, gr_total$est_temp_avg)
cor(gr_total$temp_avg, gr_total$est_temp_avg)
plot(gr_total$wind_avg, gr_total$est_wind_avg)
###### only temp from era5 since it matched reports the best
results_list_era5_w2 <- list()
for(i in 1:25){
set.seed(seeds[i])
results_list_era5_w2[[i]] <- acc_test(data = gr_total, formula2 =
"sqrtgr ~ logground + est_wind +
est_temp_avg + roofflat + Size +
Exposure +  Insulated +
Parapet + roofflat*Exposure +
roofflat*est_wind",
rf_formula = gr ~ ground_max +
est_wind +
est_temp_avg +
roofflat + Size + Exposure + Insulated +
Parapet)
}
###### only temp from era5 since it matched reports the best
results_list_era5_temp <- list()
for(i in 1:25){
set.seed(seeds[i])
results_list_era5_temp[[i]] <- acc_test(data = gr_total, formula2 =
"sqrtgr ~ logground +
est_temp_avg + roofflat + Size +
Exposure +  Insulated +
Parapet + roofflat*Exposure",
rf_formula = gr ~ ground_max +
est_temp_avg +
roofflat + Size + Exposure + Insulated +
Parapet)
}
## taking results with era5_temp
era5_temp_sum <- results_list_era5_temp[[1]]
for(i in 2:25){
era5_temp_sum <- era5_temp_sum + results_list_era5_temp[[i]]
}
era5_temp_avg <- era5_temp_sum/25
era5_temp_avg
t(era5_temp_avg)
t(era5_w2_avg)
### adding only building info to model
results_list_building <- list()
for(i in 1:25){
set.seed(seeds[i])
results_list_building[[i]] <- acc_test(data = gr_total, formula2 =
"sqrtgr ~ logground +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure",
rf_formula = gr ~ ground_max +
roofflat + Size + Exposure +  Insulated +
Parapet)
}
## taking results with weather
building_sum <- results_list_building[[1]]
for(i in 2:25){
building_sum <- building_sum + results_list_building[[i]]
}
building_avg <- building_sum/25
building_avg
t(building_avg)
t(era5_temp_avg)
ERA_avg2 <- lm(sqrtgr ~ logground + est_temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure,
data = gr_total)
summary(ERA_avg2)
View(gr_total)
building_mod <- lm(sqrtgr ~ logground +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure ,
data = gr_total)
summary(building_mod)
t(era5_temp_avg)
temp_era5_mod <- lm(sqrtgr ~ logground + est_temp_avg
roofflat + Size + Exposure +  Insulated +
temp_era5_mod <- lm(sqrtgr ~ logground + est_temp_avg +
roofflat + Size + Exposure +  Insulated +
Parapet + roofflat*Exposure ,
data = gr_total)
summary(temp_era5_mod)
summary(building_mod)
summary(model_new)
## Scatters of canadina data vs ERA 5 data
wind_avg_scat <- ggplot(gr_total, aes(x = wind_avg, y = est_wind_avg)) +
geom_point() +
labs(title = "",
x = "Canadian Average wind",
y = "Gridded average wind") +
geom_smooth(method = "lm", se = FALSE)+
theme_bw()
wind_avg_scat
## Scatters of canadina data vs ERA 5 data
wind_avg_scat <- ggplot(gr_total, aes(x = wind_avg, y = est_wind_avg)) +
geom_point() +
labs(title = "",
x = "Canadian Average wind",
y = "Gridded average wind") +
theme_bw()
wind_avg_scat
## Scatters of canadina data vs ERA 5 data
wind_avg_scat <- ggplot(gr_total, aes(x = wind_avg, y = est_wind_avg)) +
geom_point() +
labs(title = "",
x = "Canadian Average wind",
y = "Gridded average wind") +
theme_bw()
w2_scat <- ggplot(gr_total, aes(x = winter_wind_all, y = est_wind)) +
geom_point() +
labs(title = "",
x = "Canadian W2",
y = "Gridded W2") +
theme_bw()
temp_avg_scat <- ggplot(gr_total, aes(x = temp_avg, y = est_temp_avg)) +
geom_point() +
labs(title = "",
x = "Canadian Average temp",
y = "Gridded average temp") +
theme_bw()
gridExtra::grid.arrange(wind_avg_scat, w2_scat, temp_avg_scat, ncol = 1)
# version 1 of data
gr_total <- read.csv("data-raw//wind_all.csv")
gr_total[gr_total$gr >= 2,]
# version 2 of data
gr_total <- read.csv("data-raw//updated_data.csv")
gridExtra::grid.arrange(wind_avg_scat, w2_scat, temp_avg_scat, ncol = 3)
