labs(title = "Winter Wind 3 month agrregate",
x = "winter_wind_all",
y = "Frequency")
snow_hist <- ggplot(gr_total, aes(x = winter_wind_snow)) +
geom_histogram(binwidth = 0.05, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Winter Wind snow day agrregate",
x = "winter_wind_all",
y = "Frequency")
gridExtra::grid.arrange(og_hist, all_hist, month3_hist, snow_hist, ncol = 2)
#### filer out useless colums
colnames(gr_total)
gr_total$Parapet <- ifelse(gr_total$Parapet > 0, 1, 0)
gr_total_seleted <- gr_total |> select(sqrtgr, logground,
wind_avg, temp_avg, Roof_Type, Slope,
roofflat, Size, Exposure, Heated, Insulated,
Parapet, winter_wind, winter_wind_all,
winter_wind_3month, winter_wind_snow,
above_freeze, above_freeze_all)
colnames(gr_total_seleted)
ggpairs(gr_total_seleted[c(3,5, 15:16)])
ggpairs(gr_total_seleted[c(3, 6, 20)])
ggpairs(gr_total_seleted[c(3, 8, 10)])
exposure_plot <- ggplot(gr_total, aes(x = Exposure)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Exposure distribution",
x = "Exposure",
y = "Frequency")
heated_plot <- ggplot(gr_total, aes(x = Heated)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Heated distribution",
x = "Heated",
y = "Frequency") +
scale_x_continuous(breaks = seq(0, 1, 1))
insulated_plot <- ggplot(gr_total, aes(x = Insulated)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Insulated distribution",
x = "Insulated",
y = "Frequency") +
scale_x_continuous(breaks = seq(0, 1, 1))
parapet_plot <- ggplot(gr_total, aes(x = Parapet)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Parapet distribution",
x = "Parapet",
y = "Frequency") +
scale_x_continuous(breaks = seq(0, 1, 1))
gridExtra::grid.arrange(exposure_plot, heated_plot, insulated_plot,
parapet_plot, ncol = 2)
##################### Adding mapped wind ####################################
gr_total$lat <- round(gr_total$lat * 4) / 4
gr_total$long <- round(gr_total$long * 4) / 4
whole_map <-readRDS("D:/whole_map.rds")
whole_map
gr_total$est_wind <- terra::extract(whole_map,
terra::vect(matrix(c(gr_total$long,
gr_total$lat),
ncol = 2),
crs = terra::crs(whole_map)))[[2]]
model_grid <- lm(sqrtgr ~ logground + est_wind, gr_total)
summary(model_grid)
write.csv(gr_total, "data-raw//wind_all.csv")
summary(model2)
model3 <- lm(sqrtgr ~ logground + winter_wind_all, gr_total)
summary(model3)
summary(model1)
set.seed(1234)
acc_test(data = data)
data <- ("data-raw/gr_model_data.csv")
set.seed(1234)
acc_test(data = data)
data <- read.csv("data-raw/gr_model_data.csv")
set.seed(1234)
acc_test(data = data)
data2 <- read.csv("data-raw/gr_model_data_2months.csv")
data <- ("data-raw/gr_model_data.csv")
View(data2)
View(data)
data <- read.csv("data-raw/gr_model_data.csv")
data <- read.csv("data-raw/gr_model_data.csv")
set.seed(1234)
acc_test(data = data)
?acc_test
k = 5
formula1 = "sqrtgr ~ logground"
formula2 = "sqrtgr ~ logground + roofflat*Exposure +
roofflat*winter_wind +
log(Size) + temp_avg + Heated + Parapet"
rf_formula = gr ~ ground_max + roofflat + Exposure +
winter_wind + Size + temp_avg + Heated + Parapet
## setting each building as being in fold 1-k
building_nums <- sample(rep_len(seq_len(k),
length(unique(data$building_code))))
# putting numbers to building codes
test_build <- train_data <- test_data <-
fold_results <- vector("list", k)
for(i in seq_len(k)){
test_build[[i]] <- unique(data$building_code)[building_nums == i]
train_data[[i]] <- data[!(data$building_code %in% test_build[[i]]),]
test_data[[i]] <- data[data$building_code %in% test_build[[i]],]
fold_results[[i]] <- gr_cv(train_data[[i]], test_data[[i]],
formula1 = formula1,
forumula2 = formula2,
rf_formula = rf_formula)
}
test_build
fold_results
## Obtaining the building results by
results_builings <- list()
results_builings
for (i in 1:8){
results_builings[[i]] <-
unlist(lapply(fold_results, function(sub_list) sub_list[[i]]))
}
results_builings
data <- read.csv("data-raw/gr_model_data.csv")
devtools::load_all()
devtools::document()
data <- read.csv("data-raw/gr_model_data.csv")
set.seed(1234)
acc_test(data = data)
data <- read.csv("data-raw/gr_model_data.csv")
set.seed(123)
acc_test(data = data)
acc_test(data = data, formula2 = "sqrtgr ~ logground + new_wind")
acc_test(data = data, formula2 = "sqrtgr ~ logground + est_wind")
View(data)
data <- read.csv("data-raw/wind_all.csv")
set.seed(123)
acc_test(data = data)
acc_test(data = data, formula2 = "sqrtgr ~ logground + est_wind")
set.seed(123)
acc_test(data = data)
set.seed(123)
acc_test(data = data, formula2 = "sqrtgr ~ logground + est_wind")
set.seed(123)
acc_test(data = data, k = 8)
set.seed(123)
acc_test(data = data, formula2 = "sqrtgr ~ logground + est_wind", k = 8)
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + est_wind", k = 8)
set.seed(1234)
acc_test(data = data, k = 8)
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + winter_wind*exposure", k = 8)
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + winter_wind*Exposure", k = 8)
set.seed(1234)
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + est_wind*Exposure", k = 8)
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~  est_wind")
data <- read.csv("D:\\complete_data.csv")
metadata <- read.csv("D:\\gr_meta_ca_all.csv")
data$season <- rep(NA, nrow(data))
data$date <- as.Date(data$date)
## try assumption of 1 for missing exposure, 0 for heated, insulated and parpaet
data$season <- ifelse((data$date > as.Date("1957-07-01") &
data$date < as.Date("1958-07-01")), 2, data$season)
data$season <- ifelse((data$date > as.Date("1958-07-01") &
data$date < as.Date("1959-07-01")), 3, data$season)
data$season <- ifelse((data$date > as.Date("1959-07-01") &
data$date < as.Date("1960-07-01")), 4, data$season)
data$season <- ifelse((data$date > as.Date("1960-07-01") &
data$date < as.Date("1961-07-01")), 5, data$season)
data$season <- ifelse((data$date > as.Date("1961-07-01") &
data$date < as.Date("1962-07-01")), 6, data$season)
data$season <- ifelse((data$date > as.Date("1962-07-01") &
data$date < as.Date("1963-07-01")), 7, data$season)
data$season <- ifelse((data$date > as.Date("1963-07-01") &
data$date < as.Date("1964-07-01")), 8, data$season)
data$season <- ifelse((data$date > as.Date("1964-07-01") &
data$date < as.Date("1965-07-01")), 9, data$season)
data$season <- ifelse((data$date > as.Date("1965-07-01") &
data$date < as.Date("1966-07-01")), 10, data$season)
data$season <- ifelse((data$date > as.Date("1966-07-01") &
data$date < as.Date("1967-07-01")), 11, data$season)
################# summarise by building code and season #####################
library(dplyr)
library(lubridate)
ground_max <- data %>%
group_by(building_code, city_code, season) %>%
dplyr::filter(measurement == "ground") %>%
summarise(ground_max = max(value))
roof_max <- data %>%
group_by(building_code, city_code, season) %>%
dplyr::filter(mma == "avg") %>%
summarise(roof_max = max(value))
gr_data <- inner_join(ground_max, roof_max, by = c("building_code", "city_code",
"season"))
gr_data$gr <- gr_data$roof_max / gr_data$ground_max
### dplyr::filtering out the arch hangars
arch_hangars <- c("clab02", "cxbc02", "nbon02", "oton07", "wnmb04")
gr_data2 <- gr_data %>%
dplyr::filter(!(building_code %in% arch_hangars))
nrow(gr_data)
nrow(gr_data2)
### reproducing linear model
gr_data2$sqrtgr <- sqrt(gr_data2$gr)
gr_data2$logground <- log(gr_data2$ground_max)
model <- lm(sqrtgr ~ logground, data = gr_data2)
summary(model)
#### getting average wind and temps
data2 <- data %>%
dplyr::filter(month(date) %in% c(12,1,2))
wind_avgs <-  data2 %>%
group_by(city_code, season, measurement) %>%
dplyr::filter(measurement == "wind") %>%
summarise(wind_avg = mean(value), start_date = min(date),
end_date = max(date)) %>%
dplyr::filter(month(start_date) != month(end_date))
temp_avgs <-  data2 %>%
group_by(city_code, season, measurement) %>%
dplyr::filter(measurement == "temp") %>%
summarise(temp_avg = mean(value), start_date = min(date),
end_date = max(date)) %>%
dplyr::filter(month(start_date) != month(end_date))
nrow(temp_avgs)
gr_data3 <- left_join(gr_data2, wind_avgs, by = c("city_code", "season"))
gr_data_weather <- left_join(gr_data3, temp_avgs, by = c("city_code", "season"))
gr_data_weather$sqrtgr <- sqrt(gr_data_weather$gr)
gr_data_weather$logground <- log(gr_data_weather$ground_max)
model <- lm(sqrtgr ~ logground, data = gr_data_weather)
summary(model)
model2 <- lm(sqrtgr ~ logground + wind_avg + temp_avg, gr_data_weather)
summary(model2)
pairs(gr_data_weather[,c(7,8,10,12)])
gr_all <- inner_join(gr_data_weather, metadata, by = c("building_code", "city_code"))
gr_all$roofflat <- ifelse(gr_all$Roof_Type == "Flat" , 1, 0)
model3 <- lm(sqrtgr ~ logground + wind_avg + temp_avg + roofflat +
Exposure + Heated + Insulated + lat + long, gr_all)
summary(model3)
min(na.omit(gr_all$wind_avg))
################# other ways to do weather ##################################
above_freeze <-  data2 %>%
group_by(city_code, measurement, season) %>%
dplyr::filter(measurement == "temp") %>%
summarise(above_freeze = sum(value > 32)/length(value), start_date = min(date),
end_date = max(date)) %>%
dplyr::filter(month(start_date) != month(end_date))
### percentage days wind speed is over 10
winter_wind <-  data2 %>%
group_by(city_code, measurement, season) %>%
dplyr::filter(measurement == "wind") %>%
summarise(winter_wind = sum(value > 10)/length(value), start_date = min(date),
end_date = max(date)) %>%
dplyr::filter(month(start_date) != month(end_date))
gr_total <- inner_join(gr_all, winter_wind, by = c("city_code", "season")) %>%
inner_join(above_freeze, by = c("city_code", "season"))
colnames(gr_total)
gr_total <- gr_total[,c(-11,-12,-15,-16,-37,-38, -41, -42 )]
## doing og model with remaining data
model1 <- lm(sqrtgr ~ logground, gr_total)
summary(model1)
gr_total$residual <- residuals(model1)
# Not taking size of parapet into account, just if it's there or not
gr_total$Parapet <- ifelse(gr_total$Parapet > 0, 1, 0)
#### models to predict residual
model4 <- lm(residual ~ winter_wind + above_freeze, gr_total)
summary(model4)
# adjusted R^2 0.06935
model5 <- lm(residual ~ wind_avg + temp_avg, gr_total)
summary(model5)
# adjusted R^2 0.04645
model6 <- lm(residual ~ winter_wind + temp_avg, gr_total)
summary(model6)
# adjusted R^2 0.09431
model7 <- lm(residual ~ wind_avg + above_freeze, gr_total)
summary(model7)
# adjusted R^2 0.05321
resid_data <- gr_total[,c(10, 12, 19:21, 23:26, 28:30, 32, 34:35)]
resid_no_na <- na.omit(resid_data)
resid_all <- lm(residual ~ ., resid_no_na)
resid_int <- lm(residual ~ 1, resid_no_na)
resid_forward <- step(resid_int, direction='both', scope=formula(resid_all),
trace=0)
resid_backward <- step(resid_all, direction='both', scope=formula(resid_all),
trace=0)
summary(resid_backward)
summary(resid_forward)
colnames(gr_total)
## looking at tree for potential interactions
library(rpart)
library(rpart.plot)
tree <- rpart(formula = residual ~ roofflat + Exposure + winter_wind  +
Size + Heated + Parapet, data = resid_no_na)
prp(tree)
pruned_tree <- prune(tree, cp = 0.1)
prp(pruned_tree)
## looking at transformations
gr_vars <- gr_total[,c(7,8,30,23,32,28,20,24)]
pairs(gr_vars)
par(mfrow = c(2, 2))
plot(gr_vars$sqrtgr,(gr_vars$winter_wind))
plot(gr_vars$sqrtgr,log(gr_vars$winter_wind))
plot(gr_vars$sqrtgr,sqrt(gr_vars$winter_wind))
plot(gr_vars$sqrtgr,(gr_vars$winter_wind)^2)
## log appears to be the closest to linear.
### looking at size
par(mfrow = c(2, 2))
plot(gr_vars$sqrtgr,(gr_vars$Size))
plot(gr_vars$sqrtgr,log(gr_vars$Size))
plot(gr_vars$sqrtgr,sqrt(gr_vars$Size))
plot(gr_vars$sqrtgr,(gr_vars$Size)^2)
## again log looks best
## looking at lat
par(mfrow = c(2, 2))
plot(gr_vars$sqrtgr,(gr_vars$lat))
plot(gr_vars$sqrtgr,log(gr_vars$lat))
plot(gr_vars$sqrtgr,sqrt(gr_vars$lat))
plot(gr_vars$sqrtgr,(gr_vars$lat)^2)
par(mfrow = c(1, 1))
## these all look the same
## model with varibales suggested by forward regression
model8 <- lm(sqrtgr ~ logground + roofflat + Exposure + log(winter_wind) +
lat + log(Size) + Heated, gr_total)
summary(model8)
## transforming those varaibles and retrying step procedures
resid_transform <- resid_no_na
resid_transform$winter_wind <- log(resid_transform$winter_wind)
resid_transform$Size <- log(resid_transform$Size)
####### retrying step
resid_all2 <- lm(residual ~ ., resid_transform)
resid_int2 <- lm(residual ~ 1, resid_transform)
resid_forward2 <- step(resid_int2, direction='both', scope=formula(resid_all2),
trace=0)
resid_backward2 <- step(resid_all2, direction='both', scope=formula(resid_all2),
trace=0)
summary(resid_backward2)
summary(resid_forward2)
par(mfrow = c(1, 1))
plot(fitted(resid_forward2), resid(resid_forward2))
qqnorm(resid(resid_forward2), pch = 1, frame = FALSE)
qqline(resid(resid_forward2), col = "steelblue", lwd = 2)
# Size is odd. It looks like the big buildings highly influence the results,
# but then when we take the log of size their influence significantly diminishes
# Looking at tree with new suggestion
tree2 <- rpart(formula = residual ~ roofflat + Exposure + winter_wind + lat,
data = resid_transform)
prp(tree2)
## checking new suggested model
model9 <- lm(sqrtgr ~ logground + roofflat + Exposure + log(winter_wind) + lat,
data = gr_total)
summary(model9)
plot(fitted(model9), resid(model9))
qqnorm(resid(model9), pch = 1, frame = FALSE)
qqline(resid(model9), col = "steelblue", lwd = 2)
shapiro.test(resid(model9))
### looks ok other than a few outlier points
library(olsrr)
ols_plot_cooksd_chart(model9)
# 105, 302, 304, 158
ols_plot_resid_stand(model9)
# 105, 158, 33`, 324`
ols_plot_resid_lev(model9)
# 105, 158, 300, 302, 304
head(sort(resid(model9)))
head(sort(resid(model9),TRUE))
## removing big outliers
gr_total_no_out <- gr_total[-c(134, 187, 196, 360),]
model10 <- lm(sqrtgr ~ logground + roofflat + Exposure + log(winter_wind) + lat,
data = gr_total_no_out)
summary(model10)
plot(fitted(model10), resid(model10))
qqnorm(resid(model10), pch = 1, frame = FALSE)
qqline(resid(model10), col = "steelblue", lwd = 2)
shapiro.test(resid(model10))
## removing those 4 points seems to have done a lot for normality assumption
# On the very low end, residuals are all positive. Other than that I don't see
# much of a pattern
### no geography forward and backward
resid_no_geo <- resid_no_na[,-10:-11]
tree_resid <- rpart(formula = residual ~ roofflat + Exposure + winter_wind + temp_avg
+ Size + Heated, data = resid_no_na)
prp(tree_resid)
# roofflat and exposure could interact
resid_all3 <- lm(residual ~ . + roofflat*Exposure + roofflat*winter_wind,
resid_no_geo[resid_no_geo$residual <= 1,])
resid_int3 <- lm(residual ~ 1, resid_no_geo[resid_no_geo$residual <= 1,])
resid_forward3 <- step(resid_int3, direction='both', scope=formula(resid_all3),
trace=1)
resid_backward3 <- step(resid_all3, direction='both', scope=formula(resid_all3),
trace=1)
summary(resid_backward3)
summary(resid_forward3)
#positive coeficents on slope and heated don't make sense.
library(glmnet)
y <- resid_no_geo$residual[resid_no_geo$residual <= 1]
x <- data.matrix(resid_no_geo[resid_no_geo$residual <= 1,
colnames(resid_no_geo)[1:12]])
cv_model <- cv.glmnet(x, y, alpha = 1)
best_lambda <- cv_model$lambda.min
best_lambda
plot(cv_model)
best_model <- glmnet(x, y, alpha = 1, lambda = best_lambda)
coef(best_model)
# The lasso model eliminates slope, and it was confusing so I think I'll leave
# it out. Insulated was also not included here. I'll try with and without
plot(gr_total$gr,gr_total$Heated)
median(na.omit(gr_total$gr[gr_total$Heated == 1]))
median(na.omit(gr_total$gr[gr_total$Heated == 0]))
plot(resid_no_geo$residual,resid_no_geo$Heated)
median(resid_no_geo$residual[resid_no_geo$Heated == 1])
median(resid_no_geo$residual[resid_no_geo$Heated == 0])
# Heated having a positive coefficient makes even less sense now
### looking at potentional transformations for temp
par(mfrow = c(2, 2))
plot(gr_total$sqrtgr,(gr_total$temp_avg))
plot(gr_total$sqrtgr,log(gr_total$temp_avg))
plot(gr_total$sqrtgr,sqrt(gr_total$temp_avg))
plot(gr_total$sqrtgr,(gr_total$temp_avg)^2)
par(mfrow = c(1, 1))
## genuinley looks best untransformed
model11 <- lm(sqrtgr ~ logground + roofflat*Exposure + log(winter_wind) + roofflat*winter_wind +
log(Size) + temp_avg + Heated + Insulated + Parapet,
data = gr_total)
summary(model11)
plot(fitted(model11), resid(model11))
qqnorm(resid(model11), pch = 1, frame = FALSE)
qqline(resid(model11), col = "steelblue", lwd = 2)
shapiro.test(resid(model11))
## Looks like it assumptions would be met without outliers
# the is 1 observation with GR over 3. The graph matches, but there is probably
# some mistake so that will be removed
model12 <- lm(sqrtgr ~ logground + roofflat*Exposure  + roofflat*winter_wind +
log(Size) + temp_avg + Heated + Insulated + Parapet,
data = gr_total)
summary(model12)
plot(fitted(model12), resid(model12))
qqnorm(resid(model12), pch = 1, frame = FALSE)
qqline(resid(model12), col = "steelblue", lwd = 2)
shapiro.test(resid(model12))
library(psych)
model_vars <- gr_total[,c("sqrtgr", "logground", "roofflat", "Exposure",
"winter_wind", "temp_avg", "Size", "Heated", "Insulated")]
model_vars$winter_wind <- log(model_vars$winter_wind)
model_vars$Size <- log(model_vars$Size)
pairs.panels(model_vars)
## heated and insulated have multicolieiarity. 0.77 correlation Insulated will
# be dropped since it is the less significant of the 2 and npt recomenned by
# Lasso
### New model without heated
model13 <- lm(sqrtgr ~ logground + roofflat*Exposure + roofflat*winter_wind +
log(Size) + temp_avg + Heated + Parapet,
data = gr_total)
summary(model13)
plot(fitted(model13), resid(model13),
main = "Residual Plot With Outlier Point",
xlab = "Predicted Value",
ylab = "Residual Value")
abline(h = 0)
qqnorm(resid(model13), pch = 1, frame = FALSE,
main = "QQ Plot With Outlier Point")
qqline(resid(model13), col = "steelblue", lwd = 2)
shapiro.test(resid(model13))
## after dropping big gr (>3)
model14 <- lm(sqrtgr ~ logground + roofflat*Exposure + roofflat*winter_wind +
log(Size) + temp_avg + Heated + Parapet,
data = gr_total[gr_total$gr <= 2,])
summary(model14)
plot(fitted(model14), resid(model14),
main = "Residual Plot Without Outlier Point",
xlab = "Predicted Value",
ylab = "Residual Value")
abline(h = 0)
qqnorm(resid(model14), pch = 1, frame = FALSE,
main = "QQ Plot Without Outlier Point")
qqline(resid(model14), col = "steelblue", lwd = 2)
shapiro.test(resid(model14))
summary(model13)
summary(model14)
nrow(gr_total[gr_total$gr <= 2,])
summary(model13)
devtools::load_all()
devtools::document()
devtools::document()
data <- read.csv("data-raw/wind_all.csv")
set.seed(1234)
acc_test(data = data)
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat*Exposure + roofflat*winter_wind_all +
log(Size) + temp_avg + Heated + Parapet")
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat*Exposure + roofflat*winter_wind_all +
log(Size) + temp_avg + Heated + Parapet")
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat*Exposure + roofflat*winter_wind_all +
log(Size)")
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat*Exposure + roofflat*est_wind +
log(Size)")
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat*Exposure + roofflat +
log(Size)")
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat*Exposure")
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + est_wind")
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + Exposure")
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat")
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat*est_wind")
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat + est_wind")
data <- read.csv("data-raw/wind_all.csv")
model14 <- lm(sqrtgr ~ logground + roofflat*Exposure + roofflat*est_wind +
log(Size) + temp_avg + Heated + Parapet,
data = data)
summary(est_wind)
summary(model14)
model_grid <- lm(sqrtgr ~ logground + est_wind, gr_total)
model_grid <- lm(sqrtgr ~ logground + est_wind, data)
summary(model_grid)
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat")
set.seed(1234)
acc_test(data = data, formula2 = "sqrtgr ~ logground + roofflat*Exposure")
